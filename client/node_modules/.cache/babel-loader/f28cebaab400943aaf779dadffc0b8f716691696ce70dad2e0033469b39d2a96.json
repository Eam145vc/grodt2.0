{"ast":null,"code":"var _jsxFileName = \"C:\\\\tower-defense-game\\\\client\\\\src\\\\components\\\\Game\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const socketRef = useRef(null);\n  const [gameState, setGameState] = useState({\n    lanes: [{\n      id: 1,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      isGameOver: false\n    }, {\n      id: 2,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      isGameOver: false\n    }, {\n      id: 3,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      isGameOver: false\n    }, {\n      id: 4,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      isGameOver: false\n    }],\n    waveSystem: {\n      isActive: false,\n      isPaused: false,\n      currentWave: 0,\n      timeRemaining: 20\n    },\n    globalGameOver: false,\n    winner: null,\n    totalScore: 0\n  });\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    socketRef.current = io('http://localhost:5000');\n    socketRef.current.on('connect', () => {\n      setIsConnected(true);\n      console.log('Conectado al servidor');\n    });\n    socketRef.current.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Desconectado del servidor');\n    });\n    socketRef.current.on('gameState', newGameState => {\n      setGameState(newGameState);\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const drawGame = () => {\n      // Limpiar canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Dibujar fondo con gradiente\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n      gradient.addColorStop(0, '#1a1a2e');\n      gradient.addColorStop(0.5, '#16213e');\n      gradient.addColorStop(1, '#0f3460');\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      const laneWidth = canvas.width / 4;\n\n      // Dibujar carriles\n      gameState.lanes.forEach((lane, laneIndex) => {\n        const x = laneIndex * laneWidth;\n        const laneX = x + laneWidth / 2;\n\n        // Fondo del carril\n        if (lane.isGameOver) {\n          // Carril muerto - fondo rojo oscuro\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.2)';\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\n        }\n\n        // Líneas separadoras con efecto neón\n        ctx.strokeStyle = lane.isGameOver ? '#e74c3c' : '#00d4ff';\n        ctx.lineWidth = 3;\n        ctx.shadowColor = lane.isGameOver ? '#e74c3c' : '#00d4ff';\n        ctx.shadowBlur = 10;\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.stroke();\n        ctx.shadowBlur = 0;\n\n        // Números de carril con estilo futurista\n        ctx.fillStyle = lane.isGameOver ? '#e74c3c' : '#00ff88';\n        ctx.font = 'bold 24px \"Courier New\"';\n        ctx.textAlign = 'center';\n        ctx.shadowColor = ctx.fillStyle;\n        ctx.shadowBlur = 8;\n        ctx.fillText(`P${laneIndex + 1}`, laneX, 35);\n        ctx.shadowBlur = 0;\n\n        // Vida de la base con barra visual\n        const baseY = canvas.height - 60;\n        const barWidth = laneWidth - 20;\n        const barHeight = 12;\n        const barX = x + 10;\n\n        // Fondo de la barra\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n        ctx.fillRect(barX, baseY, barWidth, barHeight);\n\n        // Barra de vida\n        const healthPercent = lane.baseHealth / 100;\n        const healthWidth = barWidth * healthPercent;\n        const healthColor = healthPercent > 0.6 ? '#00ff88' : healthPercent > 0.3 ? '#ffaa00' : '#ff4444';\n        ctx.fillStyle = healthColor;\n        ctx.fillRect(barX, baseY, healthWidth, barHeight);\n\n        // Texto de vida\n        ctx.fillStyle = '#ffffff';\n        ctx.font = 'bold 14px Arial';\n        ctx.fillText(`${lane.baseHealth}/100`, laneX, baseY + 25);\n\n        // Game Over overlay para carril\n        if (lane.isGameOver) {\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.8)';\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\n\n          // Texto GAME OVER\n          ctx.fillStyle = '#ffffff';\n          ctx.font = 'bold 20px Arial';\n          ctx.textAlign = 'center';\n          ctx.shadowColor = '#000000';\n          ctx.shadowBlur = 5;\n          ctx.save();\n          ctx.translate(laneX, canvas.height / 2);\n          ctx.rotate(-Math.PI / 2);\n          ctx.fillText('GAME OVER', 0, 0);\n          ctx.restore();\n          ctx.shadowBlur = 0;\n        }\n\n        // Dibujar enemigos con efectos\n        lane.enemies.forEach(enemy => {\n          if (enemy.alive) {\n            // Sombra del enemigo\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n            ctx.beginPath();\n            ctx.arc(laneX + 2, enemy.y + 2, 16, 0, Math.PI * 2);\n            ctx.fill();\n\n            // Cuerpo del enemigo con gradiente\n            const enemyGradient = ctx.createRadialGradient(laneX, enemy.y, 0, laneX, enemy.y, 15);\n            enemyGradient.addColorStop(0, '#ff6b6b');\n            enemyGradient.addColorStop(1, '#ee5a52');\n            ctx.fillStyle = enemyGradient;\n            ctx.beginPath();\n            ctx.arc(laneX, enemy.y, 15, 0, Math.PI * 2);\n            ctx.fill();\n\n            // Borde del enemigo\n            ctx.strokeStyle = '#c0392b';\n            ctx.lineWidth = 2;\n            ctx.stroke();\n\n            // Barra de vida del enemigo\n            const enemyHealthPercent = enemy.health / enemy.maxHealth;\n            const healthBarWidth = 20;\n            const healthBarHeight = 4;\n            const healthBarX = laneX - healthBarWidth / 2;\n            const healthBarY = enemy.y - 25;\n\n            // Fondo de barra de vida\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n            ctx.fillRect(healthBarX, healthBarY, healthBarWidth, healthBarHeight);\n\n            // Barra de vida del enemigo\n            ctx.fillStyle = enemyHealthPercent > 0.5 ? '#00ff00' : '#ff4444';\n            ctx.fillRect(healthBarX, healthBarY, healthBarWidth * enemyHealthPercent, healthBarHeight);\n\n            // Vida numérica\n            ctx.fillStyle = '#ffffff';\n            ctx.font = '10px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText(enemy.health, laneX, enemy.y + 4);\n          }\n        });\n\n        // Dibujar balas con efectos\n        lane.bullets.forEach(bullet => {\n          if (bullet.alive) {\n            // Efecto de trail\n            ctx.fillStyle = 'rgba(255, 215, 0, 0.3)';\n            ctx.beginPath();\n            ctx.arc(laneX, bullet.y + 10, 8, 0, Math.PI * 2);\n            ctx.fill();\n\n            // Bala principal\n            ctx.fillStyle = '#ffd700';\n            ctx.shadowColor = '#ffd700';\n            ctx.shadowBlur = 15;\n            ctx.beginPath();\n            ctx.arc(laneX, bullet.y, 6, 0, Math.PI * 2);\n            ctx.fill();\n\n            // Núcleo brillante\n            ctx.fillStyle = '#ffffff';\n            ctx.beginPath();\n            ctx.arc(laneX - 2, bullet.y - 2, 3, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.shadowBlur = 0;\n          }\n        });\n      });\n\n      // Línea de las bases con efecto neón\n      ctx.strokeStyle = '#00ff88';\n      ctx.lineWidth = 4;\n      ctx.shadowColor = '#00ff88';\n      ctx.shadowBlur = 15;\n      ctx.beginPath();\n      ctx.moveTo(0, canvas.height - 80);\n      ctx.lineTo(canvas.width, canvas.height - 80);\n      ctx.stroke();\n      ctx.shadowBlur = 0;\n    };\n    drawGame();\n  }, [gameState]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83C\\uDF0A Oleada \", gameState.waveSystem.currentWave]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tiempo: \", formatTime(gameState.waveSystem.timeRemaining)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDFAF Puntuaci\\xF3n Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gameState.totalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCE1 Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: isConnected ? '#00ff88' : '#ff4444'\n          },\n          children: isConnected ? '🟢 Conectado' : '🔴 Desconectado'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u2694\\uFE0F Estado del Juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: gameState.waveSystem.isActive ? gameState.waveSystem.isPaused ? '#ffaa00' : '#00ff88' : '#888888'\n          },\n          children: gameState.waveSystem.isActive ? gameState.waveSystem.isPaused ? '⏸️ Pausado' : '▶️ Activo' : '⏹️ Detenido'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 600,\n        className: \"game-canvas-modern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), gameState.globalGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-overlay\",\n        children: gameState.winner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"winner-title\",\n            children: \"\\uD83C\\uDFC6 \\xA1VICTORIA!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"winner-subtitle\",\n            children: [\"Jugador \", gameState.winner, \" Gana\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"winner-score\",\n            children: [\"Puntuaci\\xF3n Final: \", gameState.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"winner-title\",\n            children: \"\\uD83D\\uDC80 DERROTA TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"winner-subtitle\",\n            children: \"Todos los jugadores han ca\\xEDdo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"winner-score\",\n            children: [\"Puntuaci\\xF3n Final: \", gameState.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lanes-status\",\n      children: gameState.lanes.map((lane, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `lane-status ${lane.isGameOver ? 'game-over' : 'alive'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Jugador \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u2764\\uFE0F \", lane.baseHealth, \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDC7E \", lane.enemies.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDD2B \", lane.bullets.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), lane.isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\",\n          children: \"\\uD83D\\uDC80 ELIMINADO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 33\n        }, this)]\n      }, lane.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFAE Usa el panel de administraci\\xF3n para controlar el juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDD17 \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/admin\",\n          style: {\n            color: '#00d4ff',\n            textDecoration: 'underline'\n          },\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Abrir Panel de Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"0OtL1R3J4I87nDiBgInyDh8+4ZE=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_s","canvasRef","socketRef","gameState","setGameState","lanes","id","baseHealth","enemies","bullets","isGameOver","waveSystem","isActive","isPaused","currentWave","timeRemaining","globalGameOver","winner","totalScore","isConnected","setIsConnected","current","on","console","log","newGameState","disconnect","canvas","ctx","getContext","drawGame","clearRect","width","height","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","laneWidth","forEach","lane","laneIndex","x","laneX","strokeStyle","lineWidth","shadowColor","shadowBlur","beginPath","moveTo","lineTo","stroke","font","textAlign","fillText","baseY","barWidth","barHeight","barX","healthPercent","healthWidth","healthColor","save","translate","rotate","Math","PI","restore","enemy","alive","arc","y","fill","enemyGradient","createRadialGradient","enemyHealthPercent","health","maxHealth","healthBarWidth","healthBarHeight","healthBarX","healthBarY","bullet","formatTime","seconds","mins","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","ref","map","index","length","href","textDecoration","target","rel","_c","$RefreshReg$"],"sources":["C:/tower-defense-game/client/src/components/Game/GamePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst GamePage = () => {\r\n  const canvasRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n  const [gameState, setGameState] = useState({\r\n    lanes: [\r\n      { id: 1, baseHealth: 100, enemies: [], bullets: [], isGameOver: false },\r\n      { id: 2, baseHealth: 100, enemies: [], bullets: [], isGameOver: false },\r\n      { id: 3, baseHealth: 100, enemies: [], bullets: [], isGameOver: false },\r\n      { id: 4, baseHealth: 100, enemies: [], bullets: [], isGameOver: false }\r\n    ],\r\n    waveSystem: {\r\n      isActive: false,\r\n      isPaused: false,\r\n      currentWave: 0,\r\n      timeRemaining: 20\r\n    },\r\n    globalGameOver: false,\r\n    winner: null,\r\n    totalScore: 0\r\n  });\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:5000');\r\n    \r\n    socketRef.current.on('connect', () => {\r\n      setIsConnected(true);\r\n      console.log('Conectado al servidor');\r\n    });\r\n    \r\n    socketRef.current.on('disconnect', () => {\r\n      setIsConnected(false);\r\n      console.log('Desconectado del servidor');\r\n    });\r\n    \r\n    socketRef.current.on('gameState', (newGameState) => {\r\n      setGameState(newGameState);\r\n    });\r\n    \r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const drawGame = () => {\r\n      // Limpiar canvas\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Dibujar fondo con gradiente\r\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n      gradient.addColorStop(0, '#1a1a2e');\r\n      gradient.addColorStop(0.5, '#16213e');\r\n      gradient.addColorStop(1, '#0f3460');\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      const laneWidth = canvas.width / 4;\r\n      \r\n      // Dibujar carriles\r\n      gameState.lanes.forEach((lane, laneIndex) => {\r\n        const x = laneIndex * laneWidth;\r\n        const laneX = x + laneWidth / 2;\r\n        \r\n        // Fondo del carril\r\n        if (lane.isGameOver) {\r\n          // Carril muerto - fondo rojo oscuro\r\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.2)';\r\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\r\n        }\r\n        \r\n        // Líneas separadoras con efecto neón\r\n        ctx.strokeStyle = lane.isGameOver ? '#e74c3c' : '#00d4ff';\r\n        ctx.lineWidth = 3;\r\n        ctx.shadowColor = lane.isGameOver ? '#e74c3c' : '#00d4ff';\r\n        ctx.shadowBlur = 10;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, 0);\r\n        ctx.lineTo(x, canvas.height);\r\n        ctx.stroke();\r\n        ctx.shadowBlur = 0;\r\n        \r\n        // Números de carril con estilo futurista\r\n        ctx.fillStyle = lane.isGameOver ? '#e74c3c' : '#00ff88';\r\n        ctx.font = 'bold 24px \"Courier New\"';\r\n        ctx.textAlign = 'center';\r\n        ctx.shadowColor = ctx.fillStyle;\r\n        ctx.shadowBlur = 8;\r\n        ctx.fillText(`P${laneIndex + 1}`, laneX, 35);\r\n        ctx.shadowBlur = 0;\r\n        \r\n        // Vida de la base con barra visual\r\n        const baseY = canvas.height - 60;\r\n        const barWidth = laneWidth - 20;\r\n        const barHeight = 12;\r\n        const barX = x + 10;\r\n        \r\n        // Fondo de la barra\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n        ctx.fillRect(barX, baseY, barWidth, barHeight);\r\n        \r\n        // Barra de vida\r\n        const healthPercent = lane.baseHealth / 100;\r\n        const healthWidth = barWidth * healthPercent;\r\n        const healthColor = healthPercent > 0.6 ? '#00ff88' : \r\n                           healthPercent > 0.3 ? '#ffaa00' : '#ff4444';\r\n        \r\n        ctx.fillStyle = healthColor;\r\n        ctx.fillRect(barX, baseY, healthWidth, barHeight);\r\n        \r\n        // Texto de vida\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.font = 'bold 14px Arial';\r\n        ctx.fillText(`${lane.baseHealth}/100`, laneX, baseY + 25);\r\n        \r\n        // Game Over overlay para carril\r\n        if (lane.isGameOver) {\r\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.8)';\r\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\r\n          \r\n          // Texto GAME OVER\r\n          ctx.fillStyle = '#ffffff';\r\n          ctx.font = 'bold 20px Arial';\r\n          ctx.textAlign = 'center';\r\n          ctx.shadowColor = '#000000';\r\n          ctx.shadowBlur = 5;\r\n          ctx.save();\r\n          ctx.translate(laneX, canvas.height / 2);\r\n          ctx.rotate(-Math.PI / 2);\r\n          ctx.fillText('GAME OVER', 0, 0);\r\n          ctx.restore();\r\n          ctx.shadowBlur = 0;\r\n        }\r\n        \r\n        // Dibujar enemigos con efectos\r\n        lane.enemies.forEach(enemy => {\r\n          if (enemy.alive) {\r\n            // Sombra del enemigo\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\r\n            ctx.beginPath();\r\n            ctx.arc(laneX + 2, enemy.y + 2, 16, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Cuerpo del enemigo con gradiente\r\n            const enemyGradient = ctx.createRadialGradient(laneX, enemy.y, 0, laneX, enemy.y, 15);\r\n            enemyGradient.addColorStop(0, '#ff6b6b');\r\n            enemyGradient.addColorStop(1, '#ee5a52');\r\n            ctx.fillStyle = enemyGradient;\r\n            ctx.beginPath();\r\n            ctx.arc(laneX, enemy.y, 15, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Borde del enemigo\r\n            ctx.strokeStyle = '#c0392b';\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n            \r\n            // Barra de vida del enemigo\r\n            const enemyHealthPercent = enemy.health / enemy.maxHealth;\r\n            const healthBarWidth = 20;\r\n            const healthBarHeight = 4;\r\n            const healthBarX = laneX - healthBarWidth / 2;\r\n            const healthBarY = enemy.y - 25;\r\n            \r\n            // Fondo de barra de vida\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n            ctx.fillRect(healthBarX, healthBarY, healthBarWidth, healthBarHeight);\r\n            \r\n            // Barra de vida del enemigo\r\n            ctx.fillStyle = enemyHealthPercent > 0.5 ? '#00ff00' : '#ff4444';\r\n            ctx.fillRect(healthBarX, healthBarY, healthBarWidth * enemyHealthPercent, healthBarHeight);\r\n            \r\n            // Vida numérica\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '10px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(enemy.health, laneX, enemy.y + 4);\r\n          }\r\n        });\r\n        \r\n        // Dibujar balas con efectos\r\n        lane.bullets.forEach(bullet => {\r\n          if (bullet.alive) {\r\n            // Efecto de trail\r\n            ctx.fillStyle = 'rgba(255, 215, 0, 0.3)';\r\n            ctx.beginPath();\r\n            ctx.arc(laneX, bullet.y + 10, 8, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Bala principal\r\n            ctx.fillStyle = '#ffd700';\r\n            ctx.shadowColor = '#ffd700';\r\n            ctx.shadowBlur = 15;\r\n            ctx.beginPath();\r\n            ctx.arc(laneX, bullet.y, 6, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Núcleo brillante\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.beginPath();\r\n            ctx.arc(laneX - 2, bullet.y - 2, 3, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            ctx.shadowBlur = 0;\r\n          }\r\n        });\r\n      });\r\n      \r\n      // Línea de las bases con efecto neón\r\n      ctx.strokeStyle = '#00ff88';\r\n      ctx.lineWidth = 4;\r\n      ctx.shadowColor = '#00ff88';\r\n      ctx.shadowBlur = 15;\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, canvas.height - 80);\r\n      ctx.lineTo(canvas.width, canvas.height - 80);\r\n      ctx.stroke();\r\n      ctx.shadowBlur = 0;\r\n    };\r\n\r\n    drawGame();\r\n  }, [gameState]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {/* Panel de información superior */}\r\n      <div className=\"game-info-panel\">\r\n        <div className=\"info-section\">\r\n          <h3>🌊 Oleada {gameState.waveSystem.currentWave}</h3>\r\n          <p>Tiempo: {formatTime(gameState.waveSystem.timeRemaining)}</p>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          <h3>🎯 Puntuación Total</h3>\r\n          <p>{gameState.totalScore}</p>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          <h3>📡 Estado</h3>\r\n          <p style={{ color: isConnected ? '#00ff88' : '#ff4444' }}>\r\n            {isConnected ? '🟢 Conectado' : '🔴 Desconectado'}\r\n          </p>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          <h3>⚔️ Estado del Juego</h3>\r\n          <p style={{ \r\n            color: gameState.waveSystem.isActive ? \r\n              (gameState.waveSystem.isPaused ? '#ffaa00' : '#00ff88') : '#888888' \r\n          }}>\r\n            {gameState.waveSystem.isActive ? \r\n              (gameState.waveSystem.isPaused ? '⏸️ Pausado' : '▶️ Activo') : '⏹️ Detenido'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Canvas del juego */}\r\n      <div className=\"game-canvas-container\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={400}\r\n          height={600}\r\n          className=\"game-canvas-modern\"\r\n        />\r\n        \r\n        {/* Overlay de ganador */}\r\n        {gameState.globalGameOver && (\r\n          <div className=\"winner-overlay\">\r\n            {gameState.winner ? (\r\n              <>\r\n                <h1 className=\"winner-title\">🏆 ¡VICTORIA!</h1>\r\n                <h2 className=\"winner-subtitle\">Jugador {gameState.winner} Gana</h2>\r\n                <p className=\"winner-score\">Puntuación Final: {gameState.totalScore}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h1 className=\"winner-title\">💀 DERROTA TOTAL</h1>\r\n                <h2 className=\"winner-subtitle\">Todos los jugadores han caído</h2>\r\n                <p className=\"winner-score\">Puntuación Final: {gameState.totalScore}</p>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Información de carriles */}\r\n      <div className=\"lanes-status\">\r\n        {gameState.lanes.map((lane, index) => (\r\n          <div \r\n            key={lane.id} \r\n            className={`lane-status ${lane.isGameOver ? 'game-over' : 'alive'}`}\r\n          >\r\n            <h4>Jugador {index + 1}</h4>\r\n            <div className=\"lane-stats\">\r\n              <span>❤️ {lane.baseHealth}/100</span>\r\n              <span>👾 {lane.enemies.length}</span>\r\n              <span>🔫 {lane.bullets.length}</span>\r\n            </div>\r\n            {lane.isGameOver && <div className=\"status-indicator\">💀 ELIMINADO</div>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"game-footer\">\r\n        <p>🎮 Usa el panel de administración para controlar el juego</p>\r\n        <p>🔗 <a \r\n          href=\"/admin\" \r\n          style={{ color: '#00d4ff', textDecoration: 'underline' }}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Abrir Panel de Admin\r\n        </a></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}