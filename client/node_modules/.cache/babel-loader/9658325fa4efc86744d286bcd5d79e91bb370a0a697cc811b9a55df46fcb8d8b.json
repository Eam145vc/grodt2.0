{"ast":null,"code":"var _jsxFileName = \"C:\\\\tower-defense-game\\\\client\\\\src\\\\components\\\\Game\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const socketRef = useRef(null);\n  const [gameState, setGameState] = useState({\n    lanes: [{\n      id: 1,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      enemyProjectiles: [],\n      isGameOver: false\n    }, {\n      id: 2,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      enemyProjectiles: [],\n      isGameOver: false\n    }, {\n      id: 3,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      enemyProjectiles: [],\n      isGameOver: false\n    }, {\n      id: 4,\n      baseHealth: 100,\n      enemies: [],\n      bullets: [],\n      enemyProjectiles: [],\n      isGameOver: false\n    }],\n    waveSystem: {\n      isActive: false,\n      isPaused: false,\n      currentWave: 0,\n      timeRemaining: 15,\n      maxTime: 15\n    },\n    globalGameOver: false,\n    winner: null,\n    enemyTypes: {}\n  });\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    socketRef.current = io('http://localhost:5000');\n    socketRef.current.on('connect', () => {\n      setIsConnected(true);\n      console.log('Conectado al servidor');\n    });\n    socketRef.current.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Desconectado del servidor');\n    });\n    socketRef.current.on('gameState', newGameState => {\n      setGameState(newGameState);\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const drawGame = () => {\n      // Limpiar canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Dibujar fondo con gradiente\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n      gradient.addColorStop(0, '#0a0a0a');\n      gradient.addColorStop(0.3, '#1a1a2e');\n      gradient.addColorStop(0.7, '#16213e');\n      gradient.addColorStop(1, '#0f3460');\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      const laneWidth = canvas.width / 4;\n\n      // Dibujar carriles\n      gameState.lanes.forEach((lane, laneIndex) => {\n        const x = laneIndex * laneWidth;\n        const laneX = x + laneWidth / 2;\n\n        // Fondo del carril\n        if (lane.isGameOver) {\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.15)';\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\n        }\n\n        // Líneas separadoras con efecto neón\n        ctx.strokeStyle = lane.isGameOver ? '#e74c3c' : '#00d4ff';\n        ctx.lineWidth = 2;\n        ctx.shadowColor = lane.isGameOver ? '#e74c3c' : '#00d4ff';\n        ctx.shadowBlur = 8;\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.stroke();\n        ctx.shadowBlur = 0;\n\n        // Números de carril\n        ctx.fillStyle = lane.isGameOver ? '#e74c3c' : '#00ff88';\n        ctx.font = 'bold 20px \"Courier New\"';\n        ctx.textAlign = 'center';\n        ctx.shadowColor = ctx.fillStyle;\n        ctx.shadowBlur = 6;\n        ctx.fillText(`P${laneIndex + 1}`, laneX, 30);\n        ctx.shadowBlur = 0;\n\n        // Vida de la base con barra visual\n        const baseY = canvas.height - 60;\n        const barWidth = laneWidth - 20;\n        const barHeight = 12;\n        const barX = x + 10;\n\n        // Fondo de la barra\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.6)';\n        ctx.fillRect(barX, baseY, barWidth, barHeight);\n\n        // Barra de vida\n        const healthPercent = lane.baseHealth / 100;\n        const healthWidth = barWidth * healthPercent;\n        const healthColor = healthPercent > 0.6 ? '#00ff88' : healthPercent > 0.3 ? '#ffaa00' : '#ff4444';\n        ctx.fillStyle = healthColor;\n        ctx.fillRect(barX, baseY, healthWidth, barHeight);\n\n        // Texto de vida\n        ctx.fillStyle = '#ffffff';\n        ctx.font = 'bold 12px Arial';\n        ctx.fillText(`${lane.baseHealth}/100`, laneX, baseY + 25);\n\n        // Game Over overlay para carril\n        if (lane.isGameOver) {\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.8)';\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\n          ctx.fillStyle = '#ffffff';\n          ctx.font = 'bold 16px Arial';\n          ctx.textAlign = 'center';\n          ctx.shadowColor = '#000000';\n          ctx.shadowBlur = 5;\n          ctx.save();\n          ctx.translate(laneX, canvas.height / 2);\n          ctx.rotate(-Math.PI / 2);\n          ctx.fillText('ELIMINADO', 0, 0);\n          ctx.restore();\n          ctx.shadowBlur = 0;\n        }\n\n        // Dibujar enemigos con diferentes estilos por tipo\n        if (lane.enemies && Array.isArray(lane.enemies)) {\n          lane.enemies.forEach(enemy => {\n            if (enemy.alive) {\n              var _enemy$type;\n              const enemyType = gameState.enemyTypes[(_enemy$type = enemy.type) === null || _enemy$type === void 0 ? void 0 : _enemy$type.toUpperCase()] || {\n                color: '#e74c3c',\n                size: 15\n              };\n\n              // Sombra del enemigo\n              ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n              ctx.beginPath();\n              ctx.arc(laneX + 2, enemy.y + 2, enemyType.size + 2, 0, Math.PI * 2);\n              ctx.fill();\n\n              // Cuerpo del enemigo con color específico\n              ctx.fillStyle = enemyType.color;\n              ctx.shadowColor = enemyType.color;\n              ctx.shadowBlur = 5;\n              ctx.beginPath();\n\n              // Formas específicas por tipo\n              if (enemy.type === 'tank') {\n                // Tanque - rectángulo\n                ctx.fillRect(laneX - enemyType.size / 2, enemy.y - enemyType.size / 2, enemyType.size, enemyType.size);\n              } else if (enemy.type === 'mini') {\n                // Mini - triángulo pequeño\n                ctx.beginPath();\n                ctx.moveTo(laneX, enemy.y - enemyType.size / 2);\n                ctx.lineTo(laneX - enemyType.size / 2, enemy.y + enemyType.size / 2);\n                ctx.lineTo(laneX + enemyType.size / 2, enemy.y + enemyType.size / 2);\n                ctx.closePath();\n                ctx.fill();\n              } else if (enemy.type === 'sniper') {\n                // Sniper - diamante\n                ctx.beginPath();\n                ctx.moveTo(laneX, enemy.y - enemyType.size / 2);\n                ctx.lineTo(laneX + enemyType.size / 2, enemy.y);\n                ctx.lineTo(laneX, enemy.y + enemyType.size / 2);\n                ctx.lineTo(laneX - enemyType.size / 2, enemy.y);\n                ctx.closePath();\n                ctx.fill();\n              } else if (enemy.type === 'boss') {\n                // Boss - estrella\n                ctx.beginPath();\n                for (let i = 0; i < 8; i++) {\n                  const angle = i * Math.PI / 4;\n                  const radius = i % 2 === 0 ? enemyType.size : enemyType.size / 2;\n                  const px = laneX + Math.cos(angle) * radius;\n                  const py = enemy.y + Math.sin(angle) * radius;\n                  if (i === 0) ctx.moveTo(px, py);else ctx.lineTo(px, py);\n                }\n                ctx.closePath();\n                ctx.fill();\n              } else {\n                // Básico y Especial 1 - círculo\n                ctx.arc(laneX, enemy.y, enemyType.size, 0, Math.PI * 2);\n                ctx.fill();\n              }\n              ctx.shadowBlur = 0;\n\n              // Borde del enemigo\n              ctx.strokeStyle = '#ffffff';\n              ctx.lineWidth = 1;\n              ctx.stroke();\n\n              // Barra de vida del enemigo (solo si no está a máxima vida)\n              if (enemy.health < enemy.maxHealth) {\n                const enemyHealthPercent = enemy.health / enemy.maxHealth;\n                const healthBarWidth = enemyType.size * 1.5;\n                const healthBarHeight = 3;\n                const healthBarX = laneX - healthBarWidth / 2;\n                const healthBarY = enemy.y - enemyType.size - 8;\n\n                // Fondo de barra de vida\n                ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n                ctx.fillRect(healthBarX, healthBarY, healthBarWidth, healthBarHeight);\n\n                // Barra de vida del enemigo\n                ctx.fillStyle = enemyHealthPercent > 0.5 ? '#00ff00' : '#ff4444';\n                ctx.fillRect(healthBarX, healthBarY, healthBarWidth * enemyHealthPercent, healthBarHeight);\n              }\n\n              // Vida numérica solo para enemigos grandes\n              if (enemyType.size >= 20 || enemy.type === 'tank') {\n                ctx.fillStyle = '#ffffff';\n                ctx.font = 'bold 10px Arial';\n                ctx.textAlign = 'center';\n                ctx.shadowColor = '#000000';\n                ctx.shadowBlur = 2;\n                ctx.fillText(enemy.health, laneX, enemy.y + 3);\n                ctx.shadowBlur = 0;\n              }\n            }\n          });\n        }\n\n        // Dibujar proyectiles de enemigos (sniper)\n        if (lane.enemyProjectiles && Array.isArray(lane.enemyProjectiles)) {\n          lane.enemyProjectiles.forEach(projectile => {\n            if (projectile.alive) {\n              // Proyectil del sniper - rojo\n              ctx.fillStyle = '#ff0066';\n              ctx.shadowColor = '#ff0066';\n              ctx.shadowBlur = 10;\n              ctx.beginPath();\n              ctx.arc(laneX, projectile.y, 4, 0, Math.PI * 2);\n              ctx.fill();\n\n              // Núcleo brillante\n              ctx.fillStyle = '#ffffff';\n              ctx.beginPath();\n              ctx.arc(laneX - 1, projectile.y - 1, 2, 0, Math.PI * 2);\n              ctx.fill();\n              ctx.shadowBlur = 0;\n            }\n          });\n        }\n\n        // Dibujar balas de defensa\n        if (lane.bullets && Array.isArray(lane.bullets)) {\n          lane.bullets.forEach(bullet => {\n            if (bullet.alive) {\n              // Efecto de trail\n              ctx.fillStyle = 'rgba(255, 215, 0, 0.3)';\n              ctx.beginPath();\n              ctx.arc(laneX, bullet.y + 8, 6, 0, Math.PI * 2);\n              ctx.fill();\n\n              // Bala principal\n              ctx.fillStyle = '#ffd700';\n              ctx.shadowColor = '#ffd700';\n              ctx.shadowBlur = 12;\n              ctx.beginPath();\n              ctx.arc(laneX, bullet.y, 5, 0, Math.PI * 2);\n              ctx.fill();\n\n              // Núcleo brillante\n              ctx.fillStyle = '#ffffff';\n              ctx.beginPath();\n              ctx.arc(laneX - 2, bullet.y - 2, 2, 0, Math.PI * 2);\n              ctx.fill();\n              ctx.shadowBlur = 0;\n            }\n          });\n        }\n      });\n\n      // Línea de las bases con efecto neón\n      ctx.strokeStyle = '#00ff88';\n      ctx.lineWidth = 4;\n      ctx.shadowColor = '#00ff88';\n      ctx.shadowBlur = 15;\n      ctx.beginPath();\n      ctx.moveTo(0, canvas.height - 80);\n      ctx.lineTo(canvas.width, canvas.height - 80);\n      ctx.stroke();\n      ctx.shadowBlur = 0;\n    };\n    drawGame();\n  }, [gameState]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getEnemyCount = () => {\n    return gameState.lanes.reduce((total, lane) => {\n      return total + (lane.enemies ? lane.enemies.length : 0);\n    }, 0);\n  };\n  const getActiveProjectiles = () => {\n    return gameState.lanes.reduce((total, lane) => {\n      return total + (lane.enemyProjectiles ? lane.enemyProjectiles.length : 0);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83C\\uDF0A Oleada \", gameState.waveSystem.currentWave]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tiempo: \", formatTime(gameState.waveSystem.timeRemaining)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC7E Enemigos Activos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getEnemyCount()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDFAF Proyectiles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getActiveProjectiles()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCE1 Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: isConnected ? '#00ff88' : '#ff4444'\n          },\n          children: isConnected ? '🟢 Conectado' : '🔴 Desconectado'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u2694\\uFE0F Estado del Juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: gameState.waveSystem.isActive ? gameState.waveSystem.isPaused ? '#ffaa00' : '#00ff88' : '#888888'\n          },\n          children: gameState.waveSystem.isActive ? gameState.waveSystem.isPaused ? '⏸️ Pausado' : '▶️ Activo' : '⏹️ Detenido'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 600,\n        className: \"game-canvas-modern\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), gameState.globalGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-overlay\",\n        children: gameState.winner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"winner-title\",\n            children: \"\\uD83C\\uDFC6 \\xA1VICTORIA!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"winner-subtitle\",\n            children: [\"Jugador \", gameState.winner, \" Sobrevive\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"winner-score\",\n            children: [\"Oleadas Completadas: \", gameState.waveSystem.currentWave]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"winner-title\",\n            children: \"\\uD83D\\uDC80 ANIQUILACI\\xD3N TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"winner-subtitle\",\n            children: \"Todos los defensores han ca\\xEDdo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"winner-score\",\n            children: [\"Oleadas Resistidas: \", gameState.waveSystem.currentWave]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lanes-status\",\n      children: gameState.lanes.map((lane, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `lane-status ${lane.isGameOver ? 'game-over' : 'alive'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Jugador \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lane-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u2764\\uFE0F \", lane.baseHealth, \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDC7E \", lane.enemies ? lane.enemies.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDD2B \", lane.bullets ? lane.bullets.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83C\\uDFAF \", lane.enemyProjectiles ? lane.enemyProjectiles.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), lane.isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\",\n          children: \"\\uD83D\\uDC80 ELIMINADO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 33\n        }, this)]\n      }, lane.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFAE Usa el panel de administraci\\xF3n para controlar el juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDD17 \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/admin\",\n          style: {\n            color: '#00d4ff',\n            textDecoration: 'underline'\n          },\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Abrir Panel de Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"MBKDmcjJf4aKjzkDc47BfIIZ4fE=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_s","canvasRef","socketRef","gameState","setGameState","lanes","id","baseHealth","enemies","bullets","enemyProjectiles","isGameOver","waveSystem","isActive","isPaused","currentWave","timeRemaining","maxTime","globalGameOver","winner","enemyTypes","isConnected","setIsConnected","current","on","console","log","newGameState","disconnect","canvas","ctx","getContext","drawGame","clearRect","width","height","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","laneWidth","forEach","lane","laneIndex","x","laneX","strokeStyle","lineWidth","shadowColor","shadowBlur","beginPath","moveTo","lineTo","stroke","font","textAlign","fillText","baseY","barWidth","barHeight","barX","healthPercent","healthWidth","healthColor","save","translate","rotate","Math","PI","restore","Array","isArray","enemy","alive","_enemy$type","enemyType","type","toUpperCase","color","size","arc","y","fill","closePath","i","angle","radius","px","cos","py","sin","health","maxHealth","enemyHealthPercent","healthBarWidth","healthBarHeight","healthBarX","healthBarY","projectile","bullet","formatTime","seconds","mins","floor","secs","toString","padStart","getEnemyCount","reduce","total","length","getActiveProjectiles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","ref","map","index","href","textDecoration","target","rel","_c","$RefreshReg$"],"sources":["C:/tower-defense-game/client/src/components/Game/GamePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst GamePage = () => {\r\n  const canvasRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n  const [gameState, setGameState] = useState({\r\n    lanes: [\r\n      { id: 1, baseHealth: 100, enemies: [], bullets: [], enemyProjectiles: [], isGameOver: false },\r\n      { id: 2, baseHealth: 100, enemies: [], bullets: [], enemyProjectiles: [], isGameOver: false },\r\n      { id: 3, baseHealth: 100, enemies: [], bullets: [], enemyProjectiles: [], isGameOver: false },\r\n      { id: 4, baseHealth: 100, enemies: [], bullets: [], enemyProjectiles: [], isGameOver: false }\r\n    ],\r\n    waveSystem: {\r\n      isActive: false,\r\n      isPaused: false,\r\n      currentWave: 0,\r\n      timeRemaining: 15,\r\n      maxTime: 15\r\n    },\r\n    globalGameOver: false,\r\n    winner: null,\r\n    enemyTypes: {}\r\n  });\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:5000');\r\n    \r\n    socketRef.current.on('connect', () => {\r\n      setIsConnected(true);\r\n      console.log('Conectado al servidor');\r\n    });\r\n    \r\n    socketRef.current.on('disconnect', () => {\r\n      setIsConnected(false);\r\n      console.log('Desconectado del servidor');\r\n    });\r\n    \r\n    socketRef.current.on('gameState', (newGameState) => {\r\n      setGameState(newGameState);\r\n    });\r\n    \r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const drawGame = () => {\r\n      // Limpiar canvas\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Dibujar fondo con gradiente\r\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n      gradient.addColorStop(0, '#0a0a0a');\r\n      gradient.addColorStop(0.3, '#1a1a2e');\r\n      gradient.addColorStop(0.7, '#16213e');\r\n      gradient.addColorStop(1, '#0f3460');\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      const laneWidth = canvas.width / 4;\r\n      \r\n      // Dibujar carriles\r\n      gameState.lanes.forEach((lane, laneIndex) => {\r\n        const x = laneIndex * laneWidth;\r\n        const laneX = x + laneWidth / 2;\r\n        \r\n        // Fondo del carril\r\n        if (lane.isGameOver) {\r\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.15)';\r\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\r\n        }\r\n        \r\n        // Líneas separadoras con efecto neón\r\n        ctx.strokeStyle = lane.isGameOver ? '#e74c3c' : '#00d4ff';\r\n        ctx.lineWidth = 2;\r\n        ctx.shadowColor = lane.isGameOver ? '#e74c3c' : '#00d4ff';\r\n        ctx.shadowBlur = 8;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, 0);\r\n        ctx.lineTo(x, canvas.height);\r\n        ctx.stroke();\r\n        ctx.shadowBlur = 0;\r\n        \r\n        // Números de carril\r\n        ctx.fillStyle = lane.isGameOver ? '#e74c3c' : '#00ff88';\r\n        ctx.font = 'bold 20px \"Courier New\"';\r\n        ctx.textAlign = 'center';\r\n        ctx.shadowColor = ctx.fillStyle;\r\n        ctx.shadowBlur = 6;\r\n        ctx.fillText(`P${laneIndex + 1}`, laneX, 30);\r\n        ctx.shadowBlur = 0;\r\n        \r\n        // Vida de la base con barra visual\r\n        const baseY = canvas.height - 60;\r\n        const barWidth = laneWidth - 20;\r\n        const barHeight = 12;\r\n        const barX = x + 10;\r\n        \r\n        // Fondo de la barra\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.6)';\r\n        ctx.fillRect(barX, baseY, barWidth, barHeight);\r\n        \r\n        // Barra de vida\r\n        const healthPercent = lane.baseHealth / 100;\r\n        const healthWidth = barWidth * healthPercent;\r\n        const healthColor = healthPercent > 0.6 ? '#00ff88' : \r\n                           healthPercent > 0.3 ? '#ffaa00' : '#ff4444';\r\n        \r\n        ctx.fillStyle = healthColor;\r\n        ctx.fillRect(barX, baseY, healthWidth, barHeight);\r\n        \r\n        // Texto de vida\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.font = 'bold 12px Arial';\r\n        ctx.fillText(`${lane.baseHealth}/100`, laneX, baseY + 25);\r\n        \r\n        // Game Over overlay para carril\r\n        if (lane.isGameOver) {\r\n          ctx.fillStyle = 'rgba(231, 76, 60, 0.8)';\r\n          ctx.fillRect(x, 0, laneWidth, canvas.height);\r\n          \r\n          ctx.fillStyle = '#ffffff';\r\n          ctx.font = 'bold 16px Arial';\r\n          ctx.textAlign = 'center';\r\n          ctx.shadowColor = '#000000';\r\n          ctx.shadowBlur = 5;\r\n          ctx.save();\r\n          ctx.translate(laneX, canvas.height / 2);\r\n          ctx.rotate(-Math.PI / 2);\r\n          ctx.fillText('ELIMINADO', 0, 0);\r\n          ctx.restore();\r\n          ctx.shadowBlur = 0;\r\n        }\r\n        \r\n        // Dibujar enemigos con diferentes estilos por tipo\r\n        if (lane.enemies && Array.isArray(lane.enemies)) {\r\n          lane.enemies.forEach(enemy => {\r\n            if (enemy.alive) {\r\n              const enemyType = gameState.enemyTypes[enemy.type?.toUpperCase()] || \r\n                              { color: '#e74c3c', size: 15 };\r\n              \r\n              // Sombra del enemigo\r\n              ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\r\n              ctx.beginPath();\r\n              ctx.arc(laneX + 2, enemy.y + 2, enemyType.size + 2, 0, Math.PI * 2);\r\n              ctx.fill();\r\n              \r\n              // Cuerpo del enemigo con color específico\r\n              ctx.fillStyle = enemyType.color;\r\n              ctx.shadowColor = enemyType.color;\r\n              ctx.shadowBlur = 5;\r\n              ctx.beginPath();\r\n              \r\n              // Formas específicas por tipo\r\n              if (enemy.type === 'tank') {\r\n                // Tanque - rectángulo\r\n                ctx.fillRect(laneX - enemyType.size/2, enemy.y - enemyType.size/2, \r\n                            enemyType.size, enemyType.size);\r\n              } else if (enemy.type === 'mini') {\r\n                // Mini - triángulo pequeño\r\n                ctx.beginPath();\r\n                ctx.moveTo(laneX, enemy.y - enemyType.size/2);\r\n                ctx.lineTo(laneX - enemyType.size/2, enemy.y + enemyType.size/2);\r\n                ctx.lineTo(laneX + enemyType.size/2, enemy.y + enemyType.size/2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n              } else if (enemy.type === 'sniper') {\r\n                // Sniper - diamante\r\n                ctx.beginPath();\r\n                ctx.moveTo(laneX, enemy.y - enemyType.size/2);\r\n                ctx.lineTo(laneX + enemyType.size/2, enemy.y);\r\n                ctx.lineTo(laneX, enemy.y + enemyType.size/2);\r\n                ctx.lineTo(laneX - enemyType.size/2, enemy.y);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n              } else if (enemy.type === 'boss') {\r\n                // Boss - estrella\r\n                ctx.beginPath();\r\n                for (let i = 0; i < 8; i++) {\r\n                  const angle = (i * Math.PI) / 4;\r\n                  const radius = i % 2 === 0 ? enemyType.size : enemyType.size / 2;\r\n                  const px = laneX + Math.cos(angle) * radius;\r\n                  const py = enemy.y + Math.sin(angle) * radius;\r\n                  if (i === 0) ctx.moveTo(px, py);\r\n                  else ctx.lineTo(px, py);\r\n                }\r\n                ctx.closePath();\r\n                ctx.fill();\r\n              } else {\r\n                // Básico y Especial 1 - círculo\r\n                ctx.arc(laneX, enemy.y, enemyType.size, 0, Math.PI * 2);\r\n                ctx.fill();\r\n              }\r\n              \r\n              ctx.shadowBlur = 0;\r\n              \r\n              // Borde del enemigo\r\n              ctx.strokeStyle = '#ffffff';\r\n              ctx.lineWidth = 1;\r\n              ctx.stroke();\r\n              \r\n              // Barra de vida del enemigo (solo si no está a máxima vida)\r\n              if (enemy.health < enemy.maxHealth) {\r\n                const enemyHealthPercent = enemy.health / enemy.maxHealth;\r\n                const healthBarWidth = enemyType.size * 1.5;\r\n                const healthBarHeight = 3;\r\n                const healthBarX = laneX - healthBarWidth / 2;\r\n                const healthBarY = enemy.y - enemyType.size - 8;\r\n                \r\n                // Fondo de barra de vida\r\n                ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n                ctx.fillRect(healthBarX, healthBarY, healthBarWidth, healthBarHeight);\r\n                \r\n                // Barra de vida del enemigo\r\n                ctx.fillStyle = enemyHealthPercent > 0.5 ? '#00ff00' : '#ff4444';\r\n                ctx.fillRect(healthBarX, healthBarY, healthBarWidth * enemyHealthPercent, healthBarHeight);\r\n              }\r\n              \r\n              // Vida numérica solo para enemigos grandes\r\n              if (enemyType.size >= 20 || enemy.type === 'tank') {\r\n                ctx.fillStyle = '#ffffff';\r\n                ctx.font = 'bold 10px Arial';\r\n                ctx.textAlign = 'center';\r\n                ctx.shadowColor = '#000000';\r\n                ctx.shadowBlur = 2;\r\n                ctx.fillText(enemy.health, laneX, enemy.y + 3);\r\n                ctx.shadowBlur = 0;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Dibujar proyectiles de enemigos (sniper)\r\n        if (lane.enemyProjectiles && Array.isArray(lane.enemyProjectiles)) {\r\n          lane.enemyProjectiles.forEach(projectile => {\r\n            if (projectile.alive) {\r\n              // Proyectil del sniper - rojo\r\n              ctx.fillStyle = '#ff0066';\r\n              ctx.shadowColor = '#ff0066';\r\n              ctx.shadowBlur = 10;\r\n              ctx.beginPath();\r\n              ctx.arc(laneX, projectile.y, 4, 0, Math.PI * 2);\r\n              ctx.fill();\r\n              \r\n              // Núcleo brillante\r\n              ctx.fillStyle = '#ffffff';\r\n              ctx.beginPath();\r\n              ctx.arc(laneX - 1, projectile.y - 1, 2, 0, Math.PI * 2);\r\n              ctx.fill();\r\n              ctx.shadowBlur = 0;\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Dibujar balas de defensa\r\n        if (lane.bullets && Array.isArray(lane.bullets)) {\r\n          lane.bullets.forEach(bullet => {\r\n            if (bullet.alive) {\r\n              // Efecto de trail\r\n              ctx.fillStyle = 'rgba(255, 215, 0, 0.3)';\r\n              ctx.beginPath();\r\n              ctx.arc(laneX, bullet.y + 8, 6, 0, Math.PI * 2);\r\n              ctx.fill();\r\n              \r\n              // Bala principal\r\n              ctx.fillStyle = '#ffd700';\r\n              ctx.shadowColor = '#ffd700';\r\n              ctx.shadowBlur = 12;\r\n              ctx.beginPath();\r\n              ctx.arc(laneX, bullet.y, 5, 0, Math.PI * 2);\r\n              ctx.fill();\r\n              \r\n              // Núcleo brillante\r\n              ctx.fillStyle = '#ffffff';\r\n              ctx.beginPath();\r\n              ctx.arc(laneX - 2, bullet.y - 2, 2, 0, Math.PI * 2);\r\n              ctx.fill();\r\n              ctx.shadowBlur = 0;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Línea de las bases con efecto neón\r\n      ctx.strokeStyle = '#00ff88';\r\n      ctx.lineWidth = 4;\r\n      ctx.shadowColor = '#00ff88';\r\n      ctx.shadowBlur = 15;\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, canvas.height - 80);\r\n      ctx.lineTo(canvas.width, canvas.height - 80);\r\n      ctx.stroke();\r\n      ctx.shadowBlur = 0;\r\n    };\r\n\r\n    drawGame();\r\n  }, [gameState]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getEnemyCount = () => {\r\n    return gameState.lanes.reduce((total, lane) => {\r\n      return total + (lane.enemies ? lane.enemies.length : 0);\r\n    }, 0);\r\n  };\r\n\r\n  const getActiveProjectiles = () => {\r\n    return gameState.lanes.reduce((total, lane) => {\r\n      return total + (lane.enemyProjectiles ? lane.enemyProjectiles.length : 0);\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      {/* Panel de información superior */}\r\n      <div className=\"game-info-panel\">\r\n        <div className=\"info-section\">\r\n          <h3>🌊 Oleada {gameState.waveSystem.currentWave}</h3>\r\n          <p>Tiempo: {formatTime(gameState.waveSystem.timeRemaining)}</p>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          <h3>👾 Enemigos Activos</h3>\r\n          <p>{getEnemyCount()}</p>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          <h3>🎯 Proyectiles</h3>\r\n          <p>{getActiveProjectiles()}</p>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          <h3>📡 Estado</h3>\r\n          <p style={{ color: isConnected ? '#00ff88' : '#ff4444' }}>\r\n            {isConnected ? '🟢 Conectado' : '🔴 Desconectado'}\r\n          </p>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          <h3>⚔️ Estado del Juego</h3>\r\n          <p style={{ \r\n            color: gameState.waveSystem.isActive ? \r\n              (gameState.waveSystem.isPaused ? '#ffaa00' : '#00ff88') : '#888888' \r\n          }}>\r\n            {gameState.waveSystem.isActive ? \r\n              (gameState.waveSystem.isPaused ? '⏸️ Pausado' : '▶️ Activo') : '⏹️ Detenido'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Canvas del juego */}\r\n      <div className=\"game-canvas-container\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={400}\r\n          height={600}\r\n          className=\"game-canvas-modern\"\r\n        />\r\n        \r\n        {/* Overlay de ganador */}\r\n        {gameState.globalGameOver && (\r\n          <div className=\"winner-overlay\">\r\n            {gameState.winner ? (\r\n              <>\r\n                <h1 className=\"winner-title\">🏆 ¡VICTORIA!</h1>\r\n                <h2 className=\"winner-subtitle\">Jugador {gameState.winner} Sobrevive</h2>\r\n                <p className=\"winner-score\">Oleadas Completadas: {gameState.waveSystem.currentWave}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h1 className=\"winner-title\">💀 ANIQUILACIÓN TOTAL</h1>\r\n                <h2 className=\"winner-subtitle\">Todos los defensores han caído</h2>\r\n                <p className=\"winner-score\">Oleadas Resistidas: {gameState.waveSystem.currentWave}</p>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Información de carriles */}\r\n      <div className=\"lanes-status\">\r\n        {gameState.lanes.map((lane, index) => (\r\n          <div \r\n            key={lane.id} \r\n            className={`lane-status ${lane.isGameOver ? 'game-over' : 'alive'}`}\r\n          >\r\n            <h4>Jugador {index + 1}</h4>\r\n            <div className=\"lane-stats\">\r\n              <span>❤️ {lane.baseHealth}/100</span>\r\n              <span>👾 {lane.enemies ? lane.enemies.length : 0}</span>\r\n              <span>🔫 {lane.bullets ? lane.bullets.length : 0}</span>\r\n              <span>🎯 {lane.enemyProjectiles ? lane.enemyProjectiles.length : 0}</span>\r\n            </div>\r\n            {lane.isGameOver && <div className=\"status-indicator\">💀 ELIMINADO</div>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"game-footer\">\r\n        <p>🎮 Usa el panel de administración para controlar el juego</p>\r\n        <p>🔗 <a \r\n          href=\"/admin\" \r\n          style={{ color: '#00d4ff', textDecoration: 'underline' }}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Abrir Panel de Admin\r\n        </a></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}